apiVersion: v1
kind: Service
metadata:
  name: nginx-{{app_service_name}}
  labels:
    app: nginx
spec:
  ports:
    - port: 80    
  selector:
    app: nginx
  type: NodePort 
  
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: nginx-{{app_service_name}}
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
      tier: data
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nginx
        tier: data
    spec:
      hostname: lynx-nginx
      containers:
      - image: nginx:{{version}}
        name: nginx
        ports:
        - containerPort: 80
          name: nginx
        volumeMounts:
        - name: ebs-nginx-vol
          mountPath: /var/lib/nginx      
      volumes:
      - name: ebs-nginx-vol
        persistentVolumeClaim:
            claimName: lynx-nginx-pvc-{{app_service_name}}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: lynx-nginx-pvc-{{app_service_name}}
spec:
  storageClassName: standard
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/var/lib/nginx"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: lynx-nginx-pvc-{{app_service_name}}
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: standard
  resources:
    requests:
      storage: 1Gi   
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: lynx-nginx-{{app_service_name}}
spec:
  rules:
  - host: lynx-nginx-{{app_service_name}}.v3.train01.stacklynx.com
    http:
      paths:
      - path: /
        backend:
          serviceName: lynx-nginx-{{app_service_name}}
          servicePort: 80
